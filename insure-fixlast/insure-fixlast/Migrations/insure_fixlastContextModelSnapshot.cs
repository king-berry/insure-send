// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using insure_fixlast.Data;

#nullable disable

namespace insure_fixlast.Migrations
{
    [DbContext(typeof(insure_fixlastContext))]
    partial class insure_fixlastContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("insure_fixlast.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("insure_fixlast.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hospital")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Claim", (string)null);
                });

            modelBuilder.Entity("insure_fixlast.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDelete")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("insure_fixlast.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDelete")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("insure_fixlast.Models.EmployeeSubService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeSubService", (string)null);
                });

            modelBuilder.Entity("insure_fixlast.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Payment")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("insure_fixlast.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeSubServiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSubServiceId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("insure_fixlast.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrderDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("benefit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDelete")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("price")
                        .HasColumnType("TEXT");

                    b.Property<int>("rank")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderDetailId");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("insure_fixlast.Models.Claim", b =>
                {
                    b.HasOne("insure_fixlast.Models.Employee", "Employee")
                        .WithMany("Claims")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("insure_fixlast.Models.Employee", b =>
                {
                    b.HasOne("insure_fixlast.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("insure_fixlast.Models.EmployeeSubService", b =>
                {
                    b.HasOne("insure_fixlast.Models.Employee", "Employee")
                        .WithMany("EmployeeSubServices")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("insure_fixlast.Models.Order", b =>
                {
                    b.HasOne("insure_fixlast.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("insure_fixlast.Models.OrderDetail", b =>
                {
                    b.HasOne("insure_fixlast.Models.EmployeeSubService", "EmployeeSubServices")
                        .WithMany("OrderDetails")
                        .HasForeignKey("EmployeeSubServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("insure_fixlast.Models.Order", "Order")
                        .WithMany("Details")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeSubServices");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("insure_fixlast.Models.Service", b =>
                {
                    b.HasOne("insure_fixlast.Models.OrderDetail", null)
                        .WithMany("Services")
                        .HasForeignKey("OrderDetailId");
                });

            modelBuilder.Entity("insure_fixlast.Models.Company", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("insure_fixlast.Models.Employee", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("EmployeeSubServices");
                });

            modelBuilder.Entity("insure_fixlast.Models.EmployeeSubService", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("insure_fixlast.Models.Order", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("insure_fixlast.Models.OrderDetail", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
